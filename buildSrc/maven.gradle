/**
 * ###################################################################
 * Repositories configuration
 * ###################################################################
 */
if (rootProject.file('buildSrc/maven-repository.gradle').exists()) {
    apply from: rootProject.file('buildSrc/maven-repository.gradle')
} else {
    repositories {
        mavenLocal()
        mavenCentral()
    }
}

/**
 * ###################################################################
 * Publishing configuration
 * ###################################################################
 */

publishing {
    def group = rootProject.group.toString()
    def artifact = project.name
    def ver = project.version == 'unspecified' ? rootProject.version.toString() : project.version.toString()

    def packageKind
    SoftwareComponent target
    plugins.withType(JavaLibraryPlugin).configureEach {
        target = project.components.java
        packageKind = 'jar'
    }

    plugins.withType(JavaPlatformPlugin).configureEach {
        target = project.components.javaPlatform
        if (artifact.contains('bom')) {
            packageKind = 'pom'
        } else {
            packageKind = 'jar'
        }
    }
    publications {
        create('library', MavenPublication) {
            versionMapping {
                allVariants {
                    fromResolutionResult()
                }
            }
            groupId group
            artifactId artifact
            version ver
            pom {
                packaging = packageKind
            }
            from target
        }
    }
}