apply plugin: 'java-platform'
apply plugin: 'maven-publish'
apply from: rootProject.file('buildSrc/maven.gradle')

javaPlatform {
    allowDependencies()
}

dependencies {
    api platform("org.springframework.boot:spring-boot-dependencies:${libs.versions.spring.boot.dependencies.get()}")
    api platform("org.springframework.cloud:spring-cloud-dependencies:${libs.versions.spring.cloud.dependencies.get()}")
    api platform("com.alibaba.cloud:spring-cloud-alibaba-dependencies:${libs.versions.spring.cloud.alibaba.dependencies.get()}")
    api platform("org.springdoc:springdoc-openapi:${libs.versions.springdoc.openapi.get()}")
    constraints {dpHandler ->
        add('api', project(':i-core'))
        add('api', project(':i-common-utilities'))
        add('api', project(':i-spring-web-config-core'))
        add('api', project(':i-spring-web-config-starter'))
        add('api', project(':i-spring-extend'))
        add('api', project(':i-spring-auto-configure'))
        add('api', project(':i-spring-boot-project'))
        add('api', project(':i-spring-cache-core'))
        add('api', project(':i-spring-cache-starter'))
        add('api', project(':i-spring-data-ddd:i-spring-ddd-common'))
        add('api', project(':i-spring-data-ddd:i-spring-ddd-jpa'))
        add('api', project(':i-spring-data-ddd:i-spring-ddd-starter'))
        def versionCatalogsExtension = project.extensions.getByType(VersionCatalogsExtension)
        versionCatalogsExtension.forEach { versionCatalog ->
            versionCatalog.libraryAliases.each {alias ->
                def library = versionCatalog.findLibrary(alias).get().get()
                dpHandler.add('api', library)
            }
        }
    }
}
