plugins {
    id 'org.springframework.boot' version '3.3.2'
}

apply plugin: 'org.springframework.boot'
apply from: rootProject.file('buildSrc/shared.gradle')

dependencies {
    implementation platform(project(':i-spring-enhance-bom'))
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-webflux')
    implementation('org.springframework.boot:spring-boot-starter-data-redis')

    implementation('jakarta.validation:jakarta.validation-api')
    implementation('org.hibernate.validator:hibernate-validator')

    implementation(project(':i-spring-web-config-starter'))
    implementation(project(':i-spring-cache-starter'))

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui'
    implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui'

    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-csv'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-toml'
    implementation 'io.micrometer:context-propagation:1.1.1'

//    implementation('org.slf4j:slf4j-simple')
    implementation('ch.qos.logback:logback-classic')
    testImplementation(platform('org.junit:junit-bom:5.9.1'))
    testImplementation('org.junit.jupiter:junit-jupiter')

    testImplementation('org.springframework.cloud:spring-cloud-starter-openfeign')

    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.jetbrains:annotations:24.1.0'
}

bootJar {
    enabled(true)
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
    }

    java21 {
        java {
            srcDirs = ['src/main/java21']
            compileClasspath += main.output
            runtimeClasspath += main.output
        }
    }
}

compileJava21Java {
    sourceCompatibility = '21'
    targetCompatibility = '21'
}

jar {
    into('META-INF/version/21') {
        from compileJava21Java.destinationDirectory
    }
}